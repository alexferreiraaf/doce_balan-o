{
  "entities": {
    "Transaction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Transaction",
      "type": "object",
      "description": "Represents a financial transaction, either an income or an expense.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the transaction."
        },
        "type": {
          "type": "string",
          "description": "Type of transaction: 'expense' or 'income'.",
          "format": "string"
        },
        "description": {
          "type": "string",
          "description": "Description of the transaction."
        },
        "category": {
          "type": "string",
          "description": "Category of the transaction (e.g., 'Mercado/Insumos', 'Venda de Bolo')."
        },
        "amount": {
          "type": "number",
          "description": "Amount of the transaction."
        },
        "discount": {
          "type": "number",
          "description": "Discount amount applied to the transaction."
        },
        "deliveryFee": {
          "type": "number",
          "description": "Delivery fee applied to the transaction."
        },
        "paymentMethod": {
          "type": [
            "string",
            "null"
          ],
          "description": "Payment method for an income transaction.",
          "enum": [
            "pix",
            "dinheiro",
            "cartao",
            "fiado",
            null
          ]
        },
        "status": {
          "type": "string",
          "description": "Status of the transaction, mainly for 'fiado' sales.",
          "enum": [
            "paid",
            "pending"
          ]
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Transaction)"
        },
        "customerId": {
          "type": [
            "string",
            "null"
          ],
          "description": "Reference to Customer. (Relationship: Customer 1:N Transaction)"
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp of when the transaction occurred.",
          "format": "date-time"
        },
        "dateMs": {
          "type": "number",
          "description": "Timestamp in milliseconds for easier filtering and sorting."
        }
      },
      "required": [
        "id",
        "type",
        "description",
        "category",
        "amount",
        "userId",
        "timestamp",
        "dateMs",
        "status"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Controle da Doçuras application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        }
      },
      "required": [
        "id"
      ]
    },
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a product that can be sold. This is a public entity.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the product."
        },
        "name": {
          "type": "string",
          "description": "Name of the product."
        },
        "price": {
          "type": "number",
          "description": "Price of the product."
        },
        "categoryId": {
          "type": [
            "string",
            "null"
          ],
          "description": "Reference to ProductCategory. (Relationship: ProductCategory 1:N Product)"
        }
      },
      "required": [
        "id",
        "name",
        "price"
      ]
    },
    "Customer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Customer",
      "type": "object",
      "description": "Represents a customer. This is a public entity.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the customer."
        },
        "name": {
          "type": "string",
          "description": "Name of the customer."
        },
        "address": {
          "type": "string",
          "description": "Address of the customer."
        },
        "whatsapp": {
          "type": "string",
          "description": "WhatsApp number of the customer."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "ProductCategory": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product Category",
      "type": "object",
      "description": "Represents a category for products.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the category."
        },
        "name": {
          "type": "string",
          "description": "Name of the category."
        }
      },
      "required": [
        "id",
        "name"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "artifacts/{appId}/users/{userId}/transactions/{transactionId}",
        "definition": {
          "entityName": "Transaction",
          "schema": {
            "$ref": "#/backend/entities/Transaction"
          },
          "description": "Stores individual transaction data for each user. This data is private to the user.",
          "params": [
            {
              "name": "appId",
              "description": "The unique identifier of the Controle da Doçuras application."
            },
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "transactionId",
              "description": "The unique identifier of the transaction."
            }
          ]
        }
      },
      {
        "path": "artifacts/{appId}/products/{productId}",
        "definition": {
          "entityName": "Product",
          "schema": {
            "$ref": "#/backend/entities/Product"
          },
          "description": "Stores product data, accessible to all users.",
          "params": [
            {
              "name": "appId",
              "description": "The unique identifier of the Controle da Doçuras application."
            },
            {
              "name": "productId",
              "description": "The unique identifier of the product."
            }
          ]
        }
      },
      {
        "path": "artifacts/{appId}/customers/{customerId}",
        "definition": {
          "entityName": "Customer",
          "schema": {
            "$ref": "#/backend/entities/Customer"
          },
          "description": "Stores customer data, accessible to all users.",
          "params": [
            {
              "name": "appId",
              "description": "The unique identifier of the Controle da Doçuras application."
            },
            {
              "name": "customerId",
              "description": "The unique identifier of the customer."
            }
          ]
        }
      },
      {
        "path": "artifacts/{appId}/product-categories/{categoryId}",
        "definition": {
          "entityName": "ProductCategory",
          "schema": {
            "$ref": "#/backend/entities/ProductCategory"
          },
          "description": "Stores product categories, accessible to all users.",
          "params": [
            {
              "name": "appId",
              "description": "The unique identifier of the Controle da Doçuras application."
            },
            {
              "name": "categoryId",
              "description": "The unique identifier of the product category."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is updated for a public/private data model. Products and Customers are now in root-level collections to be shared among all users. Transactions remain nested under the user's ID to ensure privacy. This supports the new requirement of anonymous access to public data while keeping financial records secure and user-specific. Added a new collection for product categories."
  }
}
