rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    /**
     * @description Enforces user-ownership for transaction data within the 'transactions' subcollection.
     * @path /artifacts/{appId}/users/{userId}/transactions/{transactionId}
     */
    match /artifacts/{appId}/users/{userId}/transactions/{transactionId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId) && request.auth.uid == userId;
      allow update: if isOwner(userId) && request.auth.uid == userId;
      allow delete: if isOwner(userId) && request.auth.uid == userId;
    }

    /**
     * @description Allows public read access to product data. Owner-only writes are intended once an ownerId field is added to the schema.
     * @path /artifacts/{appId}/products/{productId}
     */
    match /artifacts/{appId}/products/{productId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows public read access to customer data. Owner-only writes are intended once an ownerId field is added to the schema.
     * @path /artifacts/{appId}/customers/{customerId}
     */
    match /artifacts/{appId}/customers/{customerId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows public read access to product category data. Owner-only writes are intended once an ownerId field is added to the schema.
     * @path /artifacts/{appId}/product-categories/{categoryId}
     */
    match /artifacts/{appId}/product-categories/{categoryId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }
  }
}